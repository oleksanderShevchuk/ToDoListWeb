@model PaginatedList<Tasks>
@{
    ViewData["Title"] = "Index";
}

<div class="container p-3">
    <div class="row pt-4">
        <div class="col-6">
            <h2 class="text-primary">Daily tasks</h2>
        </div>
        <div class="col-6 text-end">
            <a asp-controller="Tasks" asp-action="Create" class="btn btn-primary">
               <i class="bi bi-plus-circle"></i> &nbsp; Create New Task
            </a>
        </div>
    </div>
</div>



<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <div>
            Find by name: 
            <input class="bg-light" type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn" />
            <a asp-action="Index" class="btn " style="width:120px">
                Back to Full List
            </a>
        </div>
    </div>
</form>

<table class="table table-bordered table-striped" style="width:100%">
    <thead>
        <tr>
            <th>
                Tasks
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td width="83%">
                    <a asp-controller="Tasks" asp-action="NoteIndex" asp-route-id="@item.Id"
                       class="text-white-50 text-decoration-none">@item.Name</a>
                </td>
                <td>
                    <div class="btn-group" role="group">
                        <a asp-controller="Tasks" asp-action="Edit" asp-route-id="@item.Id" width="50%"
                        class="btn btn-primary mx-2 rounded-2"> <i class="bi bi-pencil-square"></i> Edit</a>
                        <a asp-controller="Tasks" asp-action="Delete" asp-route-id="@item.Id" width="50%"
                        class="btn btn-danger mx-2 rounded-2"> <i class="bi bi-trash"></i> Delete</a>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"

   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>

